/*****************************************************/
/* This semester we will be using my variation of    */
/* Josh Comeau's CSS Reset instead of normalize      */
/* Read more at                                      */
/* https://www.joshwcomeau.com/css/custom-css-reset/ */
/*****************************************************/
/* Always add your CSS below the reset CSS           */
/*****************************************************/
*,
*::before,
*::after {
  box-sizing: border-box;
}

* {
  /* margin: 0; */
  /* this an experimental line-height; if it breaks, add line-height: 1.5 to body */
  line-height: calc(1em + 0.5rem);
}

html,
body {
  height: 100%;
}

body {
  margin: 0;
  -webkit-font-smoothing: antialiased;
}

/* img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
  height: auto;
} */

input,
button,
textarea,
select {
  font: inherit;
}

/* until you get a feel for overflow, I'll keep these next two commented out */
/* p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
} */

/* p {
  overflow-wrap: break-word;
  hyphens: auto;
} */

/* temp CSS for HTML only assignments */
picture img {
  width: 100%;
}

svg {
  width: 200px;
}

/* temp fix to size about img */
img[srcset] {
  width: 50%;
  height: auto;
  margin: 2rem auto;
}

/* temporary fix to size svg images */
img[src$="svg"] {
  width: 200px;
}

/************ add your CSS here *****************/
/***** General element styles *****/
:root {
  --color-font: #000000; /* black */
  --color-primary: #ffb6c1; /* light pink */
  --color-secondary: #90ee90; /* light green */
  --color-accent: #696969; /* dark gray */
  --color-accent-light: #84c9f1; /* light gray */
}

body {
  font-family: Cambria;
  color: var(--color-accent);
  display: flex;
  flex-direction: column;
  align-items: center;
}

h1,
h2,
h3,
h4 {
  color: var(--color-primary);
  font-family: Cambria;
  font-weight: 400;
  margin-bottom: 0.5em;
  margin-top: 1.5em;
}

h1 {
  font-size: 2rem;
}

h2 {
  font-size: 4rem;
}

h3 {
  font-size: 2rem;
}

p {
  margin-bottom: 1.5rem;
}

a {
  text-decoration: none;
  color: var(--color-primary);
  font-weight: 700;
}

a[href]:hover {
  color: var(--color-accent-light);
}

main {
  align-self: century;
  padding: 0 var(--gutter);
  max-width: 70rem;
}

article,
aside {
  margin-bottom: 6rem;
}

aside {
  padding: 0 1rem;
}

footer {
  background-color: var(--color-dark-accent);
}

footer p {
  color: var(--color-primary);
}

/***** General purpose classes *****/

/* hide content but make it visible to screen readers */
.sr-only {
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
  height: 1px;
  width: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
}

.button {
  border: 1px solid var(--color-primary);
  color: var(--color-primary);
  cursor: pointer;
  display: inline-block;
  padding: 0.5rem 1rem;
  text-transform: uppercase;
  transition: background-color 400ms ease-in-out, color 400ms ease-in-out;
}

.enlarged-image {
  width: 500px; /* set the width of the image to 500 pixels */
  height: auto; /* set the height to auto to maintain aspect ratio */
}

.button:hover {
  background-color: var(--color-primary);
  color: var(--color-primary);
}

/* need extra specificity to override the color set by a[href]:hover */
a.button:hover {
  color: rgb(255, 255, 255);
}

/***** Hero *****/

.hero {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background-color: #f5f5f5;
}

/* uncomment this declaration to see the gradient overlay */
/* .hero img {
  visibility: hidden;
} */

.hero picture {
  display: block;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
}

.hero img {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* using a pseudo-element for a gradient overlay  */

.hero .text-wrapper {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
}

.hero h1 {
  color: #fff;
  font-family: Cambria;
  font-size: 5rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  text-shadow: 1px 1px #000;
}

.hero p {
  font-size: 1.5rem;
}

/***** Menu *****/
header {
  margin-bottom: var(--gap);
}

header nav ul {
  display: flex;
  padding: 2rem;
  margin: 0;
  list-style-type: none;
  justify-content: space-around;
}

header nav a {
  position: relative;
  font-size: 1.5rem;
  font-weight: 500;
  text-transform: uppercase;
  margin: var(--half-gap) var(--gutter);
  padding: 1rem;
  color: var(--color-accent);
}

header nav a[href]:hover {
  color: var(--color-accent);
  text-shadow: 1px 1px 2px #9e9e9e64;
}

header nav a[href]::after {
  content: "";
  position: absolute;
  display: block;
  inset: auto 0.5rem 0;
  height: 3px;
  background-color: var(--color-primary);
}

header nav a[href]::after {
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 300ms ease-in-out;
}

header nav a[href]:hover::after {
  transform: scaleX(1);
  transform-origin: left;
}

/***** Panels *****/
.panel {
  display: flex;
  flex-direction: column;
}

.panel .image-wrapper {
  order: -1;
}

/* Cards */

.cards {
  display: flex;
  flex-wrap: wrap; /* add this property to allow the cards to wrap */
  justify-content: center; /* add this property to center the cards horizontally */
  gap: 1rem;
  padding: 0 1rem; /* use padding instead of margin to keep the cards within the screen */
  max-width: 100%; /* add this property to ensure the cards do not overflow the screen */
}

.card {
  position: relative;
  color: #fff;
  font-family: Cambria;
  font-size: 2rem;
  font-weight: 400;
}

.card p {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0;
  line-height: 1;
  padding: var(--gutter);
  background-color: rgb(0 0 0 / 60%);
  transition: background-color 400ms ease-in-out;
}

.card:hover p {
  color: transparent;
  background-color: rgb(0 0 0 / 0%);
}

/***** Media queries *****/
@media (min-width: 480px) {
  .cards {
    flex-direction: row;
    flex-wrap: wrap;
  }

  .card {
    flex: center;
  }
}

@media (min-width: 600px) {
  .panel {
    flex-direction: row;
    align-items: center;
    gap: var(--gutter);
    font-size: 1.25rem;
    height: 100vh;
  }

  .panel h2 {
    margin-top: 0;
    font-size: 3.5rem;
  }

  .panel .text-wrapper {
    flex: 1 1 40%;
  }

  .panel .image-wrapper {
    flex: 1 1 60%;
    order: 0;
  }

  .panel .left {
    order: -1;
  }
}
.cards {
  display: flex;
  flex-direction: row;
}

.card {
  position: relative;
  overflow: hidden;
}

.card img {
  transition: transform 400ms;
}

.card:hover img {
  transform: scale(1.1);
}

.card p {
  position: absolute;
  inset: auto 0 0;
  line-height: 1;
  margin: 0;
  padding: 3rem 1rem 1rem;
  font-size: 1.8rem;
  font-weight: bold;
  color: #fff;
  background-image: linear-gradient(
    to top,
    rgba(0, 0, 0, 0.6),
    rgba(0, 0, 0, 0)
  );
}

@media (min-width: 601px) {
  .panel {
    flex-direction: row;
    gap: 2rem;
  }

  .panel h2 {
    margin-top: 0;
  }

  .panel .image-wrapper {
    flex: 1 1 50%;
    order: 0;
  }
}
/* extra CSS to make the img the same height as the text */
.panel .image-wrapper img {
  height: 100%;
  object-fit: cover;
}

.panel .text-wrapper {
  flex: 1 1 50%;
}

/* extra CSS to move the button to the bottom of the panel */
.panel .text-wrapper {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

.panel .button {
  margin-bottom: 0;
  align-self: flex-start;
}

.panel .left {
  order: -1;
}
.hero-about {
  height: 80vh;
  position: center;
  margin-top: 1rem;
}

.hero-text-about {
  position: relative;
  inset: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 0 1rem 2rem;
}

.hero-text-about h1 {
  font-size: 2rem;
  line-height: 1;
  margin: 0;
  text-shadow: 1px 1px 2px black;
  color: white;
}

.video-background-about {
  background: #000;
  position: absolute;
  inset: 0;
  z-index: -99;
}

.video-foreground-about,
.video-background-about iframe {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@media (min-aspect-ratio: 16/9) {
  .video-foreground-about {
    height: 300%;
    top: -100%;
  }
}

@media (max-aspect-ratio: 16/9) {
  .video-foreground-about {
    width: 300%;
    left: -100%;
  }
}
